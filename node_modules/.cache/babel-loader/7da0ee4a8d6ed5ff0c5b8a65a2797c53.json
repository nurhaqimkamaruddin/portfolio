{"ast":null,"code":"var _jsxFileName = \"/Users/nurhaqimkamaruddin/porfolio2/src/pages/Portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Tab, Typography, Tabs, Grow, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './Portfolio.css';\nimport resumeData from '../../utils/resumeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  var _projectDialog$links;\n\n  const [tabValue, setTabValue] = useState('All');\n  const [projectDialog, setProjectDialog] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"section pb_45 pt_45\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"section_title mb_20\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"section_title_text\",\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        indicatorColor: \"white\",\n        className: \"customTabs\",\n        onChange: (event, newValue) => setTabValue(newValue),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All\",\n          value: \"All\",\n          className: tabValue == 'All' ? 'customTabs_item_active' : 'customTabs_item'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), [...new Set(resumeData.portfolio.map(item => item.tag))].map(tag => /*#__PURE__*/_jsxDEV(Tab, {\n          label: tag,\n          value: tag,\n          className: tabValue == tag ? 'customTabs_item_active' : 'customTabs_item'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: resumeData.portfolio.map(project => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: tabValue == project.tag || tabValue == 'All' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(Grow, {\n              in: true,\n              timeout: 1000,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"customCard custom_card\",\n                onClick: () => setProjectDialog(project),\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: \"customCard_image\",\n                    image: project.image,\n                    title: project.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: \"customCard_title\",\n                      children: project.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      className: \"customCard_description\",\n                      children: project.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 70\n          }, this) : null\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: projectDialog,\n      onClose: () => setProjectDialog(false),\n      className: \"projectDialog\",\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: () => setProjectDialog(false),\n        children: projectDialog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: projectDialog.image,\n        alt: \"\",\n        className: \"projectDialog_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"projectDialog_description\",\n          children: [\" \", projectDialog.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"projectDialog_description\",\n        children: projectDialog === null || projectDialog === void 0 ? void 0 : (_projectDialog$links = projectDialog.links) === null || _projectDialog$links === void 0 ? void 0 : _projectDialog$links.map(link => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link.link,\n          target: \"_blank\",\n          className: \"projectDialog_icon\",\n          children: [link.icon, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Portfolio, \"6XsPS9wty+Tj8x4oCFYjVxqEbvE=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/nurhaqimkamaruddin/porfolio2/src/pages/Portfolio/Portfolio.js"],"names":["Card","CardActionArea","CardContent","CardMedia","Grid","Tab","Typography","Tabs","Grow","Dialog","DialogTitle","DialogContent","DialogActions","React","useState","resumeData","Portfolio","tabValue","setTabValue","projectDialog","setProjectDialog","event","newValue","Set","portfolio","map","item","tag","project","image","title","description","links","link","icon"],"mappings":"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","sourcesContent":["import { Card, CardActionArea, CardContent, CardMedia, Grid, Tab, Typography ,Tabs,Grow,Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core'\nimport React, {useState} from 'react'\nimport './Portfolio.css'\nimport resumeData from '../../utils/resumeData'\n\nconst Portfolio = () => {\n    const [tabValue,setTabValue] = useState('All')\n    const [projectDialog, setProjectDialog] = useState(false)\n\n    return (\n        <Grid className='section pb_45 pt_45'>\n            {/* Title */}\n            <Grid item className='section_title mb_20'>\n            <span></span>\n            <h6 className='section_title_text'>Portfolio</h6>\n            </Grid>\n\n            {/* Tabs */}\n            <Grid item xs={12}>\n                <Tabs value={tabValue} indicatorColor='white' className='customTabs' onChange={(event, newValue) => setTabValue(newValue)}>\n                    <Tab label='All' value='All' className={tabValue == 'All' ? 'customTabs_item_active' : 'customTabs_item'}/>\n                    {[...new Set(resumeData.portfolio.map(item => item.tag))].map(tag => (\n                        <Tab label={tag} value={tag} className={tabValue == tag ? 'customTabs_item_active' : 'customTabs_item'}/>\n                    ))}\n                </Tabs>\n            </Grid>\n        \n        {/* Projects */}\n        <Grid item xs={12} >\n            <Grid container spacing={3} >\n                {resumeData.portfolio.map(project => (\n                    <>\n                    {tabValue == project.tag || tabValue == 'All' ? (<Grid item xs={12} sm={6} md={4} lg={3}>\n                        <Grow in timeout={1000}>\n                        <Card className='customCard custom_card' onClick={()=> setProjectDialog(project)}>\n                            <CardActionArea>\n                                <CardMedia className='customCard_image' image={project.image} title={project.title}/>\n                                <CardContent>\n                                    <Typography className='customCard_title'>{project.title}</Typography>\n                                    <Typography variant='body2' className='customCard_description'>{project.description}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        </Grow>\n                    </Grid>) : null}\n                    </>  \n                ))}\n            </Grid>\n        </Grid>\n        <Dialog open={projectDialog} onClose={()=> setProjectDialog(false)} className='projectDialog' fullWidth\n  maxWidth=\"sm\">\n            <DialogTitle onClose={()=> setProjectDialog(false)}>\n              {projectDialog.title}\n            </DialogTitle>\n            <img src={projectDialog.image} alt=''className='projectDialog_image'/>\n            <DialogContent>\n                <Typography className='projectDialog_description'> {projectDialog.description}</Typography>\n            </DialogContent>\n            <DialogActions className='projectDialog_description'>\n                {projectDialog?.links?.map(link => (\n                    <a href={link.link} target='_blank' className='projectDialog_icon'>{link.icon} </a>\n                ))}\n            </DialogActions>\n        </Dialog>\n        <iframe src=\"\"></iframe>\n        </Grid>\n    )\n}\n\nexport default Portfolio\n"]},"metadata":{},"sourceType":"module"}