{"ast":null,"code":"import _toConsumableArray from\"/Users/nurhaqimkamaruddin/porfolio2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nurhaqimkamaruddin/porfolio2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Card,CardActionArea,CardContent,CardMedia,Grid,Tab,Typography,Tabs,Grow,Dialog,DialogTitle,DialogContent,DialogActions}from'@material-ui/core';import React,{useState}from'react';import'./Portfolio.css';import resumeData from'../../utils/resumeData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Portfolio=function Portfolio(){var _projectDialog$links;var _useState=useState('All'),_useState2=_slicedToArray(_useState,2),tabValue=_useState2[0],setTabValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),projectDialog=_useState4[0],setProjectDialog=_useState4[1];return/*#__PURE__*/_jsxs(Grid,{className:\"section pb_45 pt_45\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,className:\"section_title mb_20\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"h6\",{className:\"section_title_text\",children:\"Portfolio\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,indicatorColor:\"white\",className:\"customTabs\",onChange:function onChange(event,newValue){return setTabValue(newValue);},children:[/*#__PURE__*/_jsx(Tab,{label:\"All\",value:\"All\",className:tabValue=='All'?'customTabs_item_active':'customTabs_item'}),_toConsumableArray(new Set(resumeData.portfolio.map(function(item){return item.tag;}))).map(function(tag){return/*#__PURE__*/_jsx(Tab,{label:tag,value:tag,className:tabValue==tag?'customTabs_item_active':'customTabs_item'});})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:resumeData.portfolio.map(function(project){return/*#__PURE__*/_jsx(_Fragment,{children:tabValue==project.tag||tabValue=='All'?/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,lg:3,children:/*#__PURE__*/_jsx(Grow,{in:true,timeout:1000,children:/*#__PURE__*/_jsx(Card,{className:\"customCard custom_card\",onClick:function onClick(){return setProjectDialog(project);},children:/*#__PURE__*/_jsxs(CardActionArea,{children:[/*#__PURE__*/_jsx(CardMedia,{className:\"customCard_image\",image:project.image,title:project.title}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{className:\"customCard_title\",children:project.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:\"customCard_description\",children:project.description})]})]})})})}):null});})})}),/*#__PURE__*/_jsxs(Dialog,{open:projectDialog,onClose:function onClose(){return setProjectDialog(false);},className:\"projectDialog\",fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(DialogTitle,{onClose:function onClose(){return setProjectDialog(false);},children:projectDialog.title}),/*#__PURE__*/_jsx(\"img\",{src:projectDialog.image,alt:\"\",className:\"projectDialog_image\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Typography,{className:\"projectDialog_description\",children:[\" \",projectDialog.description]})}),/*#__PURE__*/_jsx(DialogActions,{className:\"projectDialog_description\",children:projectDialog===null||projectDialog===void 0?void 0:(_projectDialog$links=projectDialog.links)===null||_projectDialog$links===void 0?void 0:_projectDialog$links.map(function(link){return/*#__PURE__*/_jsxs(\"a\",{href:link.link,target:\"_blank\",className:\"projectDialog_icon\",children:[link.icon,\" \"]});})})]}),/*#__PURE__*/_jsx(\"iframe\",{src:\"\"})]});};export default Portfolio;","map":{"version":3,"sources":["/Users/nurhaqimkamaruddin/porfolio2/src/pages/Portfolio/Portfolio.js"],"names":["Card","CardActionArea","CardContent","CardMedia","Grid","Tab","Typography","Tabs","Grow","Dialog","DialogTitle","DialogContent","DialogActions","React","useState","resumeData","Portfolio","tabValue","setTabValue","projectDialog","setProjectDialog","event","newValue","Set","portfolio","map","item","tag","project","image","title","description","links","link","icon"],"mappings":"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","sourcesContent":["import { Card, CardActionArea, CardContent, CardMedia, Grid, Tab, Typography ,Tabs,Grow,Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core'\nimport React, {useState} from 'react'\nimport './Portfolio.css'\nimport resumeData from '../../utils/resumeData'\n\nconst Portfolio = () => {\n    const [tabValue,setTabValue] = useState('All')\n    const [projectDialog, setProjectDialog] = useState(false)\n\n    return (\n        <Grid className='section pb_45 pt_45'>\n            {/* Title */}\n            <Grid item className='section_title mb_20'>\n            <span></span>\n            <h6 className='section_title_text'>Portfolio</h6>\n            </Grid>\n\n            {/* Tabs */}\n            <Grid item xs={12}>\n                <Tabs value={tabValue} indicatorColor='white' className='customTabs' onChange={(event, newValue) => setTabValue(newValue)}>\n                    <Tab label='All' value='All' className={tabValue == 'All' ? 'customTabs_item_active' : 'customTabs_item'}/>\n                    {[...new Set(resumeData.portfolio.map(item => item.tag))].map(tag => (\n                        <Tab label={tag} value={tag} className={tabValue == tag ? 'customTabs_item_active' : 'customTabs_item'}/>\n                    ))}\n                </Tabs>\n            </Grid>\n        \n        {/* Projects */}\n        <Grid item xs={12} >\n            <Grid container spacing={3} >\n                {resumeData.portfolio.map(project => (\n                    <>\n                    {tabValue == project.tag || tabValue == 'All' ? (<Grid item xs={12} sm={6} md={4} lg={3}>\n                        <Grow in timeout={1000}>\n                        <Card className='customCard custom_card' onClick={()=> setProjectDialog(project)}>\n                            <CardActionArea>\n                                <CardMedia className='customCard_image' image={project.image} title={project.title}/>\n                                <CardContent>\n                                    <Typography className='customCard_title'>{project.title}</Typography>\n                                    <Typography variant='body2' className='customCard_description'>{project.description}</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        </Grow>\n                    </Grid>) : null}\n                    </>  \n                ))}\n            </Grid>\n        </Grid>\n        <Dialog open={projectDialog} onClose={()=> setProjectDialog(false)} className='projectDialog' fullWidth\n  maxWidth=\"sm\">\n            <DialogTitle onClose={()=> setProjectDialog(false)}>\n              {projectDialog.title}\n            </DialogTitle>\n            <img src={projectDialog.image} alt=''className='projectDialog_image'/>\n            <DialogContent>\n                <Typography className='projectDialog_description'> {projectDialog.description}</Typography>\n            </DialogContent>\n            <DialogActions className='projectDialog_description'>\n                {projectDialog?.links?.map(link => (\n                    <a href={link.link} target='_blank' className='projectDialog_icon'>{link.icon} </a>\n                ))}\n            </DialogActions>\n        </Dialog>\n        <iframe src=\"\"></iframe>\n        </Grid>\n    )\n}\n\nexport default Portfolio\n"]},"metadata":{},"sourceType":"module"}